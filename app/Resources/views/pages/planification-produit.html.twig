{% extends "base.html.twig" %}
{% block body %}
    <section id="planif-produits">
        <div class="entete">
            <h2>planifier un produit</h2>
            {% for message in app.flashes('notice') %}
                <div class="flash-notice">
                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                    {{ message }}
                </div>
            {% endfor %}
            <input class="subm buttonn" type="button" id="button-8" value="Retour à la page précedente" onclick="history.go(-1)">
        </div>
        <div class="pp">
            <p>détail de la {{ saledocumentline.saledocument.documentNumber }}</p>
        </div>
        <span class="span-item-sale">
            <p>Ref : {{ saledocumentline.item.id}}</p>
            <p>{{ saledocumentline.description }}</p>
            <p>Quantité : {{ saledocumentline.quantity }}</p>
        </span>

        <div class="detail_container">
            <ul class="tabs">
                {% for competence in competences %}
                    <li rel="tab" data-skill="{{ competence.id }}">{{ competence.name }}</li>
                {% endfor %}
            </ul>
            <div class="tab_container" data-skill="0"></div>
        </div>
        <div id="tab" class="tab_content">
            <form action="{{ path('set_plannification') }}">
                <div class="tab_content_container tabo">
                    <div class="tab__content-time">
                        <p class="tab_content_container-para">Temps prévisionel de planification : </p>
                        <div class="tab_content-timechoice">
                            <input class="skill" type="hidden" name="skill" value="1">
                            <input class="time" type="time" name="time" required title="">
                            <button class="six col col-time" id="valide-time">
                                <input class="subm buttonn" type="submit" id="button-8" value="Valider">
                            </button>
                            {#<button id="valide-time">Validez votre temps</button>#}
                        </div>
                    </div>
                    <input class="saledoclineid" type="hidden" name="saleDocLine" value="{{ saledocumentline.id }}">
                    <div class="demo-section k-content form-group-global">
                        <div class="form-group">
                            <label for="date">Date de début :</label>
                            <div class="input-group date" style="width: 100%">
                                <input id="start" style="width: 100%;" type="hidden" name="dateStart" placeholder="Sélectionne une date"><span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="date" class="control-label">Date de fin :</label>
                            <div class="input-group date" style="width: 100%">
                                <input id="end" style="width: 100%;" type="hidden" name="dateEnd" placeholder="Sélectionne une date"><span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab_content__container-area">
                    <div id="actor"></div>
                </div>
                <div class="button__subm-form">
                    <div class="tab__content_label">
                        <label for="check">
                            Mettre en attente
                            <input type="checkbox">
                        </label>
                    </div>
                    <div class="container__submit">
                        <input class="subm buttonn" type="button" id="button-8" value="Ignorer">
                        <input class="subm buttonn valider-soustache" type="submit" id="button-8" value="Valider">
                    </div>
                </div>
            </form>
        </div>

        <form action="{{ path('set_plannificationtotal') }}">
            <div class="planif-produits-comments">
                <textarea name="comment" id="" cols="70" rows="6"  placeholder="Saissisez votre commentaire"></textarea>
            </div>
            <div class="planif-produits-validate button__subm-form">
                {#<button class="six col" id="valide-time">#}
                <input class="subm buttonn" type="submit" id="button-8" value="Valider la planification">
                <input class="time buttonn" type="hidden" name="saleDocLine" value="{{ saledocumentline.id }}">
                {#</button>#}
            </div>
        </form>
    </section>
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('js/main.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/datePicker.js') }}"></script>
    {#<script src="http://kendo.cdn.telerik.com/2013.2.716/js/cultures/kendo.culture.fr-FR.min.js"></script>#}
    <script src="http://kendo.cdn.telerik.com/2018.2.620/js/cultures/kendo.culture.fr-FR.min.js"></script>
    <script type="text/javascript">

        $(function () {


            const $bb = document.getElementById('valide-time');
            const $actor = document.getElementById('actor');
            const $skill = document.querySelector('li.active');
            const $inputskill = document.querySelector('input.skill');
            const $inputTime = document.querySelector('input.time');
            const $inputStart = document.querySelector('input#start');
            const $inputEnd = document.querySelector('input#end');
            var $inputactor = null;
            const $inputValider = document.querySelector("input.valider-soustache[value='Valider']");
            const $inputIgnorer = document.querySelector("input[value='Ignorer']");
            const li_skill = $("ul.tabs li");
            const $saledocumentlineid = "{{ saledocumentline.id }}";
            console.log(li_skill);

            if ($("ul.tabs li")) {
                $("ul.tabs li").click(function () {
                    let skill = $(this).attr('data-skill');
                    const $skill = $(this);
                    $('.tab_container').hide();
                    $('.tab_container[data-skill='+skill+']').show();
                    $("ul.tabs li").removeClass('active');
                    $(this).addClass('active');
                    const data_skill = $skill.attr("data-skill");

                    $inputskill.setAttribute("value", data_skill);
                });
                $("ul.tabs li:first-child").trigger('click');
            }
            {#var skilltab = [];#}
            {#for(let i = 0; i < li_skill.length; i++){#}
                {#let data_skill = li_skill.get(i).getAttribute("data-skill");#}
                {#skilltab.push(data_skill);#}
            {#}#}
                {#$.ajax({#}
                    {#url: "{{ path('set_plannification_check_skill') }}",#}
                    {#method: "POST",#}
                    {#data: {#}
                        {#saledocumentlineid : $saledocumentlineid,#}
                        {#dataSkills : skilltab#}
                    {#}#}
                {#})#}
                    {#.done( function( datas ) {#}
                        {#if(datas == 0){#}
                            {#let data_skill = li_skill.get(0).getAttribute("data-skill");#}
                            {#li_skill.get(0).classList.add("active");#}
                                    {#$inputskill.setAttribute("value", data_skill);#}
                        {#}#}
                        {#// for(let i = 0; i < li_skill.length; i++){#}
                        {#//     if(li_skill.get(i).classList.contains("active")){#}
                        {#//         li_skill.get(i).classList.remove("active");#}
                        {#//         li_skill.get(i+1).classList.add("active");#}
                        {#//#}
                        {#//         $inputskill.setAttribute("value", data_skill);#}
                        {#//#}
                        {#//         break#}
                        {#//     }#}
                        {#// }#}
                        {#console.log(datas);#}
                    {#});#}
            // console.log(li_skill.get(0).classList.contains("active"));
            // console.log($(li_skill.get(0)).hasClass("active"));
            // console.log(li_skill.get(0).classList.item(0));
            // console.log(li_skill.get(0).classList);
            // console.log($inputValider);


            // console.log($skill.getAttribute("data-skill"));
            $inputValider.addEventListener('click', function (e) {
                e.preventDefault();
                e.stopPropagation();
                let dataSkill = $inputskill.getAttribute('value');
                let actor = $inputactor.value;
                let dateStart = $inputStart.value;
                let dateEnd = $inputEnd.value;
                let timePrev = $inputTime.value;

                $.ajax({
                    url: "{{ path('set_plannification') }}",
                    method: "POST",
                    data: {
                        saledocumentlineid : $saledocumentlineid,
                        dataSkill : dataSkill ,
                        actor : actor ,
                        dateStart : dateStart ,
                        dateEnd : dateEnd ,
                        timePrev : timePrev ,
                    }
                })
                    .done( function( datas ) {
                        alert(datas)
                        for(let i = 0; i < li_skill.length; i++){
                            if(li_skill.get(i).classList.contains("active")){
                                li_skill.get(i).classList.remove("active");
                                li_skill.get(i+1).classList.add("active");
                                let data_skill = li_skill.get(i+1).getAttribute("data-skill");
                                $inputskill.setAttribute("value", data_skill);

                                break
                            }
                        }
                        console.log(datas);
                    });
            });
            $bb.addEventListener('click', function (e) {
                e.preventDefault();
                e.stopPropagation();
                let dataSkill = $inputskill.getAttribute('value');
                $.ajax({
                    url: "{{ app.request.getSchemeAndHttpHost() ~ path('get_actor') }}",
                    method: "GET",
                    data: {skill : dataSkill }
                }).done( function( datas ) {
                    data = JSON.parse(datas);
                    const $selectActor = document.createElement("SELECT");
                    $selectActor.setAttribute('name',"actor");

                    for ( let i = 0; i < data.length; i++ ) {

                        let $opt = document.createElement("OPTION");
                        $opt.setAttribute('value',data[i].id);

                        let t = document.createTextNode(data[i].name);
                        $opt.appendChild(t);
                        $selectActor.appendChild($opt)
                    }
                    $actor.appendChild($selectActor);
                    $inputactor = document.querySelector("select[name='actor']");
                    // Create a <p> element
                });
            });
        })
    </script>
    <script>
        $(document).ready(function() {
            function startChange() {
                var startDate = start.value(),
                    endDate = end.value();

                if (startDate) {
                    startDate = new Date(startDate);
                    startDate.setDate(startDate.getDate());
                    end.min(startDate);
                } else if (endDate) {
                    start.max(new Date(endDate));
                } else {
                    endDate = new Date();
                    start.max(endDate);
                    end.min(endDate);
                }
            }

            function endChange() {
                var endDate = end.value(),
                    startDate = start.value();

                if (endDate) {
                    endDate = new Date(endDate);
                    endDate.setDate(endDate.getDate());
                    start.max(endDate);
                } else if (startDate) {
                    end.min(new Date(startDate));
                } else {
                    endDate = new Date();
                    start.max(endDate);
                    end.min(endDate);
                }
            }

            var today = kendo.date.today();

            var start = $("#start").kendoDateTimePicker({
                culture: "fr-FR",
                change: startChange,
                value: new Date(),
                format: "dd-MM-yyyy"
            }).data("kendoDateTimePicker");

            var end = $("#end").kendoDateTimePicker({
                culture: "fr-FR",
                value: new Date(),
                change: endChange,
                format: "dd-MM-yyyy"
            }).data("kendoDateTimePicker");

            // start.max(end.value());
            // end.min(start.value());
        });
    </script>

{% endblock %}