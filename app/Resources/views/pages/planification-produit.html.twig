{% extends "base.html.twig" %}
{% block body %}
    <section id="planif-produits">
        <div class="entete">
            <h2>planifier un produit</h2>
            {% for message in app.flashes('notice') %}
                <div class="flash-notice">
                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                    {{ message }}
                </div>
            {% endfor %}
            <input class="subm buttonn" type="button" id="button-8" value="Retour à la page précedente" onclick="history.go(-1)">
        </div>
        <div class="pp">
            <p>détail de la {{ saledocumentline.saledocument.documentNumber }}</p>
        </div>
        <span class="span-item-sale">
            <p>Ref : {{ saledocumentline.item.id}}</p>
            <p>{{ saledocumentline.description }}</p>
            <p>Quantité : {{ saledocumentline.quantity }}</p>
        </span>

        <div class="detail_container">
            <ul class="tabs">
                {% for competence in competences %}
                    <li rel="tab" data-skill="{{ competence.id }}">{{ competence.name }}</li>
                {% endfor %}
            </ul>
            <div class="tab_container" data-skill="0"></div>
        </div>
        <div id="tab" class="tab_content">
            <form action="{{ path('set_plannification') }}" method="post">
                <div class="tab_content_container tabo">
                    <div class="tab__content-time">
                        <p class="tab_content_container-para">Temps prévisionel de planification : </p>
                        <div class="tab_content-timechoice">
                            <input class="skill" type="hidden" name="skill" value="1">
                            <input class="time" type="time" name="time" required title="">
                            <button class="six col col-time" id="valide-time">
                                <input class="subm buttonn" type="submit" id="button-8" value="Valider">
                            </button>
                            <button class="six col col-time last-skills">
                                <input class="subm buttonn last-task" type="submit" id="button-8" value="Passez à la dernière étape">
                            </button>
                        </div>
                    </div>

                    <input class="saledoclineid" type="hidden" name="saleDocLine" value="{{ saledocumentline.id }}">
                    <div class="demo-section k-content form-group-global">
                        <div class="form-group">
                            <label for="date">Date de début :</label>
                            <div class="input-group date" style="width: 100%">
                                <input id="start" style="width: 100%;" type="hidden" name="dateStart" placeholder="Sélectionne une date"><span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="date" class="control-label">Date de fin :</label>
                            <div class="input-group date" style="width: 100%">
                                <input id="end" style="width: 100%;" type="hidden" name="dateEnd" placeholder="Sélectionne une date"><span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab_content__container-area">
                    <div id="actor"></div>
                </div>
                <div class="button__subm-form">

                    <div class="container__submit">
                        <input class="subm buttonn" type="button" id="button-8" value="Ignorer">
                        <input class="subm buttonn valider-soustache" type="submit" id="button-8" value="Valider">
                    </div>
                </div>
            </form>

        </div>

        <form action="{{ path('set_plannificationtotal') }}">
            <div class="tab__content_label">
                <label for="check">
                    Mettre en attente
                    <input type="checkbox" id="wait-check" name="waitCheck">
                </label>
            </div>
            <div class="planif-produits-comments">
                <textarea name="comment" id="" cols="70" rows="6"  placeholder="Saissisez votre commentaire"></textarea>
                <div class="openmodal-button">
                    <a href="#openModal" class="subm buttonn " id="button-8">Voir les tâches enregistrées</a>
                </div>
                <div id="openModal" class="modalDialog">
                    <div>
                        <a href="#close" title="Close" class="close">&times;</a>
                        <h2>Listes des tâches enregistrées</h2>
                        <div class="modal__title">
                            <span>Taches</span>
                            <span>Acteurs</span>
                            <span>Temps prévisionnels</span>
                            <span>Date de début</span>
                            <span>Date de fin</span>
                            <span>Actions</span>
                            <span>Actions</span>
                        </div>
                        <hr>
                        <div class="openModal__wrapper">
                            <div class="openModal__content"></div>
                        </div>
                    </div>
                </div>
                <div id="openModal2" class="modalDialog">
                    <div>
                        <a href="#close" title="Close" class="close">&times;</a>
                        <div class="openModal2__content">
                            <span>Temps previsionnels</span>
                            <span>Date de début</span>
                            <span>Date de fin</span>
                            <span>Actions</span>
                        </div>
                        <hr>
                        <div class="openModal2__wrapper">
                            <div class="openModal__content"></div>
                        </div>


                    </div>
                </div>
            </div>

            {#{% if saledocumentline.saledocument.status != "Planifié"%}#}
                <div class="planif-produits-validate button__subm-form">
                    <input class="subm buttonn" type="submit" id="button-8" value="Valider la planification">
                    <input class="time buttonn" type="hidden" name="saleDocLine" value="{{ saledocumentline.id }}">
                </div>
            {#{% endif %}#}
        </form>
    </section>
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('js/main.js') }}"></script>
    {#<script type="text/javascript" src="{{ asset('js/datePicker.js') }}"></script>#}
    <script src="http://kendo.cdn.telerik.com/2018.2.620/js/cultures/kendo.culture.fr-FR.min.js"></script>
    <script type="text/javascript">

        $(function () {
            const $bb = document.getElementById('valide-time');
            const $actor = document.getElementById('actor');
            const $skill = document.querySelector('li.active');
            const $inputskill = document.querySelector('input.skill');
            const $inputTime = document.querySelector('input.time');
            const $inputStart = document.querySelector('input#start');
            const $inputEnd = document.querySelector('input#end');
            var $inputactor = null;
            const $inputValider = document.querySelector("input.valider-soustache[value='Valider']");
            const $bbValiderPlanif = document.querySelector(".planif-produits-validate");
            const $inputIgnorer = document.querySelector("input[value='Ignorer']");
            const $$li_skill = $("ul.tabs li");
            const $saledocumentlineid = "{{ saledocumentline.id }}";
            const $lastTask = document.querySelector('.last-task');

            const $openModal = document.querySelector('.openmodal-button');
            const $openModalWrapper = document.querySelector('.openModal__wrapper');
            const $openModal2Wrapper = document.querySelector('.openModal2__wrapper');
            const $openModalClose = document.querySelector('#close');
            const $waitCheck = document.querySelector('#wait-check');
            var dateinitial = new Date();

            dateinitial.setHours(8);
            dateinitial.setMinutes(0);

            var start = $("#start").kendoDateTimePicker({
                culture: "fr-FR",
                change: startChange,
                value: new Date(),
                format: "dd-MM-yyyy HH:mm"
            }).data("kendoDateTimePicker");

            var end = $("#end").kendoDateTimePicker({
                culture: "fr-FR",
                value: dateinitial,
                change: endChange,
                format: "dd-MM-yyyy HH:mm"
            }).data("kendoDateTimePicker");


            var skilltab = [];
            for (let i = 0; i < $$li_skill.length; i++) {
                let data_skill = $$li_skill.get(i).getAttribute("data-skill");
                skilltab.push(data_skill);
            }
            $inputIgnorer.style.visibility = "hidden";
            $lastTask.style.visibility = "hidden";
            start.min(start.value());
            end.min(start.value());


            $.ajax({
                url: "{{ path('set_plannification_check_skill') }}",
                method: "POST",
                data: {
                    saledocumentlineid : $saledocumentlineid,
                    dataSkills : skilltab
                }
            })
                .done( function( datas ) {
                    datas = JSON.parse(datas);
                    let startDate;
                    if(datas['end'] != null){
                        startDate = new Date(datas['end']);
                    }else {
                        startDate = new Date();
                    }
                    startDate.setHours(8);
                    startDate.setMinutes(0);
                    for (let i = 0; i < $$li_skill.length; i++) {
                        if ($$li_skill.get(i).classList.contains("active")) {
                            $$li_skill.get(i).classList.remove("active");
                            break
                        }
                    }
                    if ($$li_skill.length === datas['position']) {
                        datas['position'] -= 1;
                        if ($bbValiderPlanif) {

                            $bbValiderPlanif.style.visibility = "visible";
                        }
                        $inputValider.style.visibility = "hidden";
                        $inputValider.style.visibility = "hidden";
                        $lastTask.style.visibility = "hidden";
                    }else if(($$li_skill.length - 1) === datas['position']) {
                        $inputIgnorer.style.visibility = "hidden";
                        $lastTask.style.visibility = "hidden";
                    }else {
                        $inputIgnorer.style.visibility = "visible";
                        $lastTask.style.visibility = "visible";
                    }

                    let data_skill = $$li_skill.get(datas['position']).getAttribute("data-skill");
                    $inputskill.setAttribute("value", data_skill);
                    $$li_skill.get(datas['position']).classList.add("active");
                    start.value(startDate);
                    end.value(startDate);
                    start.min(start.value(startDate));
                    start.min(start.value());
                    end.min(start.value(startDate));
                    end.min(start.value());
                });

            $lastTask.addEventListener('click', function (event) {
                event.preventDefault();
                const liLastSkill = $$li_skill.length-1;
                console.log($$li_skill);
                console.log($$li_skill.get(0));
                let itmp = null;
                for ( let i = 0 ; i < $$li_skill.length - 1; i++) {
                    if ($$li_skill.get(i).classList.contains('active')) {
                        itmp = i;
                        break
                    }
                }
                for ( let i = itmp ; i < $$li_skill.length - 1; i++) {
                    if ($$li_skill.get(i).classList.contains('active')) {
                        $$li_skill.get(i).classList.remove('active');
                    }
                    let data_skillValue = $$li_skill.get(i).getAttribute("data-skill");
                    $inputskill.setAttribute("value", data_skillValue);
                    let dataSkill = $inputskill.getAttribute('value');
                    let actor = null;
                    let dateStart = null;
                    let dateEnd = null;
                    let timePrev = null;

                    $.ajax({
                        url: "{{ path('set_plannification') }}",
                        method: "POST",
                        data: {
                            saledocumentlineid: $saledocumentlineid,
                            dataSkill: dataSkill,
                            actor: actor,
                            dateStart: dateStart,
                            dateEnd: dateEnd,
                            timePrev: timePrev,
                            status: "ignorer"
                        }
                    })
                }
                $$li_skill.get(liLastSkill).classList.add('active');
                let data_skill = $$li_skill.get(liLastSkill).getAttribute("data-skill");
                $inputskill.setAttribute("value", data_skill);
                $inputIgnorer.style.visibility = "hidden";
                $lastTask.style.visibility = "hidden";
            });
            $inputValider.addEventListener('click', function (e) {
                e.preventDefault();
                e.stopPropagation();
                let status;
                if($waitCheck.checked){
                    status = 'En attente'
                }else {
                    status = 'Valider'

                }
                let dataSkill = $inputskill.getAttribute('value');
                    let actor = [];
                if ($inputactor) {
                    for(let i=0;i < $inputactor.length; i++){
                        actor.push($inputactor[i].value)
                    }
                }
                let dateStart = $inputStart.value;
                let dateEnd = $inputEnd.value;
                let timePrev = $inputTime.value;
                console.log($inputactor);
                if ($inputactor == null){
                    swal({
                        title: "Votre temps n'est pas validé"
                    });
                }else{
                    let actor = [];
                    if ($inputactor) {
                        for(let i=0;i < $inputactor.length; i++){
                            actor.push($inputactor[i].value)
                        }
                    }
                    $.ajax({
                        url: "{{ path('set_plannification') }}",
                        method: "POST",
                        data: {
                            saledocumentlineid : $saledocumentlineid,
                            dataSkill : dataSkill ,
                            actor : actor ,
                            dateStart : dateStart ,
                            dateEnd : dateEnd ,
                            timePrev : timePrev ,
                            status : status
                        }
                    })
                        .done( function ( datas ) {
                            swal({
                                icon: "success",
                                title: datas,
                                timer: 3000,
                                button: false
                                // timer: "2000"
                            });

                            for(let i=0;i < $inputactor.length; i++){
                                $inputactor[i].parentNode.removeChild($inputactor[i]);
                            }
                            $inputTime.value = "--:--";
                            $inputactor = null;
                            let data_skill;
                            for(let i = 0; i < $$li_skill.length; i++){
                                if($$li_skill.get(i).classList.contains("active")){
                                    $$li_skill.get(i).classList.remove("active");
                                    if(i === $$li_skill.length - 1){

                                        $$li_skill.get(i).classList.add("active");
                                        let data_skill = $$li_skill.get(i).getAttribute("data-skill");
                                        $bbValiderPlanif.style.visibility = "visible";
                                        $inputValider.style.visibility = "hidden";
                                        $inputIgnorer.style.visibility = "hidden";
                                    }else if(i === $$li_skill.length - 2) {

                                        $$li_skill.get(i+1).classList.add("active");
                                        data_skill = $$li_skill.get(i+1).getAttribute("data-skill");
                                        $inputIgnorer.style.visibility = "hidden";
                                    }else {

                                        $$li_skill.get(i+1).classList.add("active");
                                        data_skill = $$li_skill.get(i+1).getAttribute("data-skill");
                                    }
                                    console.log(data_skill);
                                    $inputskill.setAttribute("value", data_skill);

                                    break
                                }
                            }
                            dateStartEndValider()
                        });
                }
            });
            $inputIgnorer.addEventListener('click', function (e) {
                e.preventDefault();
                e.stopPropagation();
                let dataSkill = $inputskill.getAttribute('value');
                let actor = null;
                let dateStart = null;
                let dateEnd = null;
                let timePrev = null;

                $.ajax({
                    url: "{{ path('set_plannification') }}",
                    method: "POST",
                    data: {
                        saledocumentlineid : $saledocumentlineid,
                        dataSkill : dataSkill ,
                        actor : actor ,
                        dateStart : dateStart ,
                        dateEnd : dateEnd ,
                        timePrev : timePrev ,
                        status : "ignorer"
                    }
                })
                    .done( function ( datas ) {
                        console.log($inputactor);
                        let data_skill;
                        if($inputactor){
                            $inputactor.parentNode.removeChild($inputactor);
                        }
                        $inputTime.value = "--:--";
                        for(let i = 0; i < $$li_skill.length; i++){
                            if($$li_skill.get(i).classList.contains("active")){
                                $$li_skill.get(i).classList.remove("active");
                                if(i === $$li_skill.length - 1){

                                    $$li_skill.get(i).classList.add("active");
                                    data_skill = $$li_skill.get(i).getAttribute("data-skill");
                                    $bbValiderPlanif.style.visibility = "visible";
                                    $inputValider.style.visibility = "hidden";
                                    $inputIgnorer.style.visibility = "hidden";
                                }else if(i === $$li_skill.length - 2) {

                                    $$li_skill.get(i+1).classList.add("active");
                                    data_skill = $$li_skill.get(i+1).getAttribute("data-skill");
                                    $inputIgnorer.style.visibility = "hidden";
                                }else {

                                    $$li_skill.get(i+1).classList.add("active");
                                    data_skill = $$li_skill.get(i+1).getAttribute("data-skill");
                                }
                                console.log(data_skill);
                                $inputskill.setAttribute("value", data_skill);

                                break
                            }
                        }
                    });
            });
            $bb.addEventListener('click', function (e) {
                e.preventDefault();
                e.stopPropagation();
                let dataSkill = $inputskill.getAttribute('value');
                $.ajax({
                    url: "{{ app.request.getSchemeAndHttpHost() ~ path('get_actor') }}",
                    method: "GET",
                    data: {skill : dataSkill }
                }).done( function( datas ) {
                    data = JSON.parse(datas);
                    const $selectActor = document.createElement("SELECT");
                    $selectActor.setAttribute('name',"actor");
                    $selectActor.setAttribute('id',"actor");

                    for ( let i = 0; i < data.length; i++ ) {

                        let $opt = document.createElement("OPTION");
                        $opt.setAttribute('value',data[i].id);

                        let t = document.createTextNode(data[i].name);
                        $opt.appendChild(t);
                        $selectActor.appendChild($opt)
                    }
                    $actor.appendChild($selectActor);
                    $inputactor = document.querySelectorAll("select[name='actor']");
                    // Create a <p> element
                });
            });

            $openModal.addEventListener('click', openModalFunc)
            // $openModalClose.addEventListener('click',function () {
            //     " lol".log
            // })
            function openModalFunc(event) {

                $openModalWrapper.innerHTML= " ";
                $.ajax({
                    url: "{{ path('list-sub-task', {'id': saledocumentline.id}) }}",
                    method: "GET",
                }).done( function( datas ) {

                    datas = JSON.parse(datas);

                    for (let i = 0; i < datas.length; i++){
                        let actortext;

                        if(datas[i].actor.length === 1){
                            actortext =  datas[i].actor[0].name
                        }else if (datas[i].actor.length > 1) {

                            let actorTab = [];
                            for (let j = 0; j < datas[i].actor.length; j++){
                                actorTab.push(datas[i].actor[j].name)
                            }
                            actortext = actorTab.join(", ");
                        }
                        let $openModalContent = document.createElement('DIV');
                        let $task = document.createElement('SPAN');
                        let $taskText = document.createTextNode(datas[i].competence);
                        let $actor = document.createElement('SPAN');
                        let $actorText = document.createTextNode(actortext);
                        let $timeprevis = document.createElement('SPAN');
                        let $timeprevisText = document.createTextNode(datas[i].timePlanif);
                        let $dateStart = document.createElement('SPAN');
                        let $dateStartText = document.createTextNode(datas[i].startingDate);
                        let $dateEnd = document.createElement('SPAN');
                        let $dateEndText = document.createTextNode(datas[i].endDate);
                        let $openModalEdit = document.createElement('A');
                        let $openModalDelete = document.createElement('A');
                        let $openModalEditText = document.createTextNode('Modifier');
                        let $openModalDeleteText = document.createTextNode('Supprimer');

                        $openModalContent.classList.add('openModal__content');
                        $openModalEdit.setAttribute('href', '#openModal2');
                        $openModalEdit.setAttribute('data-idTask', datas[i].idTask);
                        $openModalDelete.setAttribute('href', '#');
                        $openModalDelete.setAttribute('data-idTask', datas[i].idTask);




                        $task.appendChild($taskText);
                        $actor.appendChild($actorText);
                        $timeprevis.appendChild($timeprevisText);
                        $dateStart.appendChild($dateStartText);
                        $dateEnd.appendChild($dateEndText);
                        $openModalEdit.appendChild($openModalEditText);
                        $openModalDelete.appendChild($openModalDeleteText);

                        $openModalContent.appendChild($task);
                        $openModalContent.appendChild($actor);
                        $openModalContent.appendChild($timeprevis);
                        $openModalContent.appendChild($dateStart);
                        $openModalContent.appendChild($dateEnd);
                        $openModalContent.appendChild($openModalEdit);
                        $openModalContent.appendChild($openModalDelete);

                        $openModalWrapper.appendChild($openModalContent);

                        $openModalEdit.addEventListener('click', function (event) {
                            $openModal2Wrapper.innerHTML= " ";
                            $openModalWrapper.innerHTML= " ";
                            $.ajax({
                                url: "/subTask/"+datas[i].idTask,
                                method: "GET",
                            }).done( function( datas2 ) {

                                let idTask = datas[i].idTask
                                datas2 = JSON.parse(datas2);
                                console.log(datas2);
                                let $form = document.createElement('FORM');
                                let $timeprevis = document.createElement('INPUT');
                                let $dateStart = document.createElement('INPUT');
                                let $dateEnd = document.createElement('INPUT');
                                // let $valider = document.createElement('BUTTON');
                                let $valider = document.createElement('DIV');
                                let $close = document.createElement('A');
                                let $validerdText = document.createTextNode('Valider');


                                $timeprevis.setAttribute('type', 'time');
                                $timeprevis.setAttribute('name', 'timeprevis');
                                $timeprevis.setAttribute('value',  datas2.timePlanif);
                                $dateStart.setAttribute('type', 'date');
                                $dateStart.setAttribute('name', 'datestart');
                                $dateStart.setAttribute('value',  datas2.startingDate);
                                $dateEnd.setAttribute('type', 'date');
                                $dateEnd.setAttribute('name', 'dateend');
                                $dateEnd.setAttribute('value',  datas2.endDate);
                                $close.setAttribute('href',  '#openModal');

                                $close.appendChild($validerdText);
                                $valider.appendChild($close);
                                $form.appendChild($timeprevis);
                                $form.appendChild($dateStart);
                                $form.appendChild($dateEnd);
                                $form.appendChild($valider);
                                // $form.appendChild($close);

                                $openModal2Wrapper.appendChild($form);

                                $valider.addEventListener('click', function (event) {
                                    // event.preventDefault();
                                    $timeprevisData = $timeprevis.value;
                                    $dateStartData = $dateStart.value;
                                    $dateEndData = $dateEnd.value;
                                    $openModal2Wrapper.innerHTML= " ";
                                    console.log($timeprevisData + '  ' + $dateStartData + '  ' + $dateEndData);
                                    $.ajax({
                                        url: "/subTask/"+idTask,
                                        method: "POST",
                                        data: {
                                            dateStart : $dateStartData ,
                                            dateEnd : $dateEndData ,
                                            timePrev : $timeprevisData
                                        }

                                    }).done( function( datas3 ) {
                                        openModalFunc();
                                        console.log(datas3);
                                    })
                                })
                            });
                        });
                        $openModalDelete.addEventListener('click', function (event) {
                            event.preventDefault();

                            swal({
                                title: "Voulez-vous supprimer la planification de cette tâche ?",
                                text: "En validant vous ne pourrez pas revenir en arrière !",
                                icon: "warning",
                                dangerMode: true,
                                buttons: ["Annuler", true],
                            })
                                .then((add) => {
                                    if (add != null) {
                                        confirme = add;
                                    }
                                    if (add) {
                                        $.ajax({
                                            url: "/subTask/"+datas[i].idTask,
                                            method: "POST",
                                            data: {delete: true}
                                        })
                                            .done(function (result) {
                                                swal("Votre panification a bien été supprimée", {
                                                    icon: "success",
                                                    // buttons: ["Annuler", true],
                                                }).then((add) => {
                                                    // const $atEnd = document.querySelector("#catEnd[data-id='" + data_id + "']");
                                                    $($catEnd).html("&#10004");
                                                    $($dateEndFab).html(result);
                                                });
                                                openModalFunc();
                                                // const $atEnd = document.querySelector("#catEnd[data-id='" + data_id + "']");
                                                console.log(result);
                                            })
                                    } else {
                                        swal({
                                            position: "top",
                                            icon: "error",
                                            title: "La suppresion a été annulée"
                                        });
                                    }
                                });
                        });
                    }
                });
            }
            function startChange() {
                var startDate = start.value();

                if (startDate) {
                    startDate = new Date(startDate);
                    startDate.setDate(startDate.getDate());
                    startDate.setHours(8);
                    startDate.setMinutes(0);

                    end.min(startDate);
                    end.value(startDate);

                }
            }

            function endChange() {
                var endDate = end.value();

                if (endDate) {
                    endDate = new Date(endDate);
                    endDate.setDate(endDate.getDate());
                    endDate.setHours(8);
                    endDate.setMinutes(0);
                    // start.min(endDate);
                }
            }
            function dateStartEndValider() {
                var endDate = end.value();

                if (endDate) {
                    endDate = new Date(endDate);
                    endDate.setDate(endDate.getDate());
                    endDate.setHours(8);
                    endDate.setMinutes(0);
                    start.value(endDate);
                    end.value(endDate);
                }
            }
        })

    </script>
    {#<script>#}
        {#$(document).ready(function() {#}
            {#function startChange() {#}
                {#var startDate = start.value(),#}
                    {#endDate = end.value();#}

                {#if (startDate) {#}
                    {#startDate = new Date(startDate);#}
                    {#startDate.setDate(startDate.getDate());#}
                    {#end.min(startDate);#}
                    {#end.value(startDate);#}
                    {#console.log(1);#}

                {#} else if (endDate) {#}
                    {#console.log(2);#}
                    {#start.max(new Date(endDate));#}
                {#} else {#}
                    {#console.log(3);#}
                    {#endDate = new Date();#}
                    {#// start.max(endDate);#}
                    {#// end.min(endDate);#}
                {#}#}
            {#}#}

            {#function endChange() {#}
                {#var endDate = end.value(),#}
                    {#startDate = start.value();#}

                {#if (endDate) {#}
                    {#endDate = new Date(endDate);#}
                    {#endDate.setDate(endDate.getDate());#}
                    {#start.min(endDate);#}
                {#} else if (startDate) {#}
                    {#console.log(2);#}
                    {#end.min(new Date(startDate));#}
                {#} else {#}
                    {#console.log(3);#}
                    {#endDate = new Date();#}
                    {#start.max(endDate);#}
                    {#end.min(endDate);#}
                {#}#}
            {#}#}

            {#var start = $("#start").kendoDateTimePicker({#}
                {#culture: "fr-FR",#}
                {#change: startChange,#}
                {#value: new Date(),#}
                {#format: "dd-MM-yyyy HH:mm"#}
            {#}).data("kendoDateTimePicker");#}

            {#var end = $("#end").kendoDateTimePicker({#}
                {#culture: "fr-FR",#}
                {#value: new Date(),#}
                {#change: endChange,#}
                {#format: "dd-MM-yyyy HH:mm"#}
            {#}).data("kendoDateTimePicker");#}

            {#start.min(start.value());#}
            {#end.min(start.value());#}
        {#});#}
    {#</script>#}

{% endblock %}